<?php
function ubn_markdown_filter_info() {
  return array(
    'ubn_markdown' => array(
      'title' => t('UBN Markdown extras'),
      'description' => t("Markdown extension for UBNext"),
      'process callback' => '_ubn_markdown',
      //'settings callback' => '_ubn_markdown_settings',
      //'default settings' => array(),
      'tips callback' => '_ubn_markdown_tips',
    ),
  );
}
// TODO: use slate instead? 
function _ubn_markdown_replace_callback($matches) {
  $output = '<div markdown="1" class="ubn-call-to-action">';
  if(!empty($matches['title'])) {
    $output .= '<h4 class="ubn-call-to-action-title">' . $matches['title'] . '</h4>';
  }
  $output .= '<div markdown="1" class="ubn-call-to-action-content">' . $matches['content'] . '</div>';
  if(!empty($matches['link_text'])) {
    // Wrap in div to prevent markdown from wrapping in p (better fix possible?)
    $output .= '<div><a class="ubn-call-to-action-link"';
    $output .= ' href="' . $matches['link_href'] . '"';
    if(!empty($matches['link_title'])) {
      $output .= ' title = "' . $matches['link_title'] . '"';
    }
    $output .= '>' . $matches['link_text'] . '</a></div>';
  }
  $output .= '</div>';
  return $output;
}

function _ubn_markdown($text, $format) {
  // Simplified parsing of links compared to php-markdown
  // but probably good enough
  return preg_replace_callback('/
    ^\!{3,}\h*$           # Begin call to action block (!!!)
    \s*
    (?:^\#+(?P<title>[^\r\n]+))?
    (?P<content>.+?)
    \s*
    (?:
      ^\[
        (?P<link_text>.+?)
      \]
      \(
        (?P<link_href>.+?)
        (?:\s*[\"\'](?P<link_title>.+?)[\"\'])? #TODO: backreference group matching thing instead of \"\'
      \)
    )?
    \s*
    ^\!{3,}\h*$           # End call to action block (!!!)
    /msx', '_ubn_markdown_replace_callback', $text);
}

function _ubn_markdown_tips($filter, $format, $long = FALSE) {
  return $long ?
    'Long description text wrapped in t' :
    'Short description';
}
