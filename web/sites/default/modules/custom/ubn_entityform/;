<?php
/*
function ubn_entityform_form_alter(&$form, &$form_state, $form_id) {
}
*/
function ubn_entityform_form_issue_entityform_edit_form_alter(&$form, &$form_state) {
  //$form['actions']['submit']['#submit'][] = 'ubn_entityform_issue_entityform_edit_form_submit';
  //TODO: Should make sure we are always the last validation handler
  // right now not sure that is always the case (in case other modules add
  // validation handler after us)
  // should implement hook_module_implements_alter?
  $form['#validate'][] = 'ubn_entityform_issue_entityform_edit_form_validate';
}

function ubn_entityform_issue_entityform_edit_form_validate($form, &$form_state) {
  form_set_error('form', 'something went wrong');
  if($form_state['submitted']) {
    //TODO: How does entityform get built? Interesting
    $entity_form_wrapper = entity_metadata_wrapper('entityform', $form_state['entityform']);
    $ttx_data = array(
      'group' => $entity_form_wrapper->field_ttx_group->field_value->value(),
      'library' => $entity_form_wrapper->field_ttx_library->field_value->value(),
      'email' => $entity_form_wrapper->field_email->value(),
    );
    dsm($ttx_data);
  }
}

function ubn_entityform_forms($form_id, $args) {
  if(strpos($form_id, '_entityform_edit_form') !== FALSE) {
    dsm('yes');
    //$forms[$form_id] = array('callback' => rtrim($form_id, '0123456879_'));
    $forms[$form_id] = array('callback' => 'entityform_edit_form');
    dsm($forms);
    return $forms;
  }
}

/*
function ubn_entityform_issue_entityform_edit_form_submit(&$form, &$form_state) {
  dsm($form_state);
  $ttx_data = array();
}
*/

function _ubn_entityform_type($field_name) {
  $matches = array();
  preg_match('/^field_(\w+?)_form_instance$/', $field_name, $matches);
  return !empty($matches) ? $matches[1] : NULL;
}

function ubn_entityform_field_collection_is_empty_alter(&$is_empty, FieldCollectionItemEntity $item) {
  if (_ubn_entityform_type($item->field_name)) {
    $ttx_library = field_get_items('field_collection_item', $item, 'field_ttx_library');
    $ttx_group = field_get_items('field_collection_item', $item, 'field_ttx_group');
    $is_empty = !isset($ttx_library[0]['tid']) || !isset($ttx_group[0]['tid']);
  }
}

function ubn_entityform_form_entityform_edit_form_alter(&$form, &$form_state, $form_id) {
  $issue = $form['#entity'];
  if (!empty($issue->ubn_entityform['hidden_fields'])) {
    foreach ($issue->ubn_entityform['hidden_fields'] as $field_name) {
      $form[$field_name]['#access'] = FALSE;
    }
  }
  $form['actions']['captcha'] = array(
    '#type' => 'captcha',
    '#captcha_type' => 'recaptcha/reCAPTCHA',
    '#weight' => -99,
  );
  #$form['actions']['submit']['#submit'][] = 'ubn_entityform_entityform_edit_form_submit';
}

function ubn_entityform_entityform_edit_form_submit(&$form, &$form_state) {
  /*
  drupal_session_start();
  $entity_form = $form['#entity'];
  list($id) = entity_extract_ids('entityform', $entity_form);
  $_SESSION['ubn_entityform_id'] = $id;
  */
}

//TODO: array $hidden_fields?
function _ubn_entityform_form_instance_render($field_instance, $entityform_type = NULL) {
  module_load_include('inc', 'entityform', 'entityform.admin');
  global $language_content;

  $issue = entityform_empty_load($entityform_type);

  try {
    $issue_wrapper = entity_metadata_wrapper(
      'entityform',
      $issue,
      array(
        'langcode' => $language_content->language,
      )
    );
  } catch(Exception $e) {
    drupal_set_message($e->getMessage(), 'error');
    watchdog_exception('ubn_entityform', $e);
  }

  $issue->ubn_entityform = array();

  $info_instances = field_info_instances('field_collection_item', $field_instance->field_name->value());
  foreach (array_keys($info_instances) as $field_name) {
    // Hide fields storing hidden setting
    if (!preg_match('/_access$/', $field_name)) {
      $issue_wrapper->get($field_name)->set($field_instance->get($field_name)->value());
      if (
        !isset($info_instances[$field_name . '_access']) ||
        $field_instance->get($field_name . '_access')->value()
      ) {
        $issue->ubn_entityform['hidden_fields'][] = $field_name;
      }
    }
  }
  //TODO: entity_metadata_wrapper, set values etc
  //$form = entityform_form_wrapper($issue, 'submit', 'embedded');
  $form = drupal_get_form($issue->type . '_entityform_edit_form_' . $field_instance->getIdentifier(), $issue, 'submit', 'embedded');
  return drupal_render($form);
}

/**
 * Implements hook_slate_twig_alter().
 *
 * @param $twig
 */
function ubn_entityform_slate_twig_alter(&$twig) {
  $function = new Twig_SimpleFunction(
    'ubn_form_instance_render',
    '_ubn_entityform_form_instance_render'
  );
  $twig->addFunction($function);
}

