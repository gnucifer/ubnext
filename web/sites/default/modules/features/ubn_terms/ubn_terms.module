<?php
/**
 * @file
 * Code for the UBN Terms feature.
 */

include_once 'ubn_terms.features.inc';

function ubn_terms_entity_info_alter(&$entity_info) {
  $entity_info['taxonomy_term']['view modes']['ubn_terms_search_result'] = array(
    'label' => t('UBN Terms search result'),
    'custom settings' => FALSE,
  );
}

function ubn_terms_safe_css_identifier($data) {
  // small hack
  return drupal_clean_css_identifier($data);
  $tmp = unpack('H*', $data);
  return array_shift($tmp);
}

function ubn_terms_form_taxonomy_form_term_alter(&$form, &$form_state) {
  if($form['#bundle'] === 'term_synonym' || $form['#bundle'] === 'term') {
    if($form['#bundle'] === 'term_synonym') {
      $form['description']['#access'] = FALSE;
    }
    $form['relations']['#access'] = FALSE;
    $form['path']['#access'] = FALSE;
  }
}

function _ubn_terms_language_terms($term_name, $language) {
  $query = new EntityFieldQuery();
  $result = $query
    ->entityCondition('entity_type', 'taxonomy_term')
    ->entityCondition('bundle', array('term', 'term_synonym'), 'IN')
    ->fieldCondition('name_field', 'value', $term_name)
    ->addMetaData('entity_language', $language)
    ->addTag('UBN_TERMS_LANGUAGE_TERMS')
    ->execute();
  return isset($result['taxonomy_term']) ? $result['taxonomy_term'] : array();
}

function _ubn_terms_field_attach_validate_unique_set_error($tid, $field_name, $language, &$errors) {
  $term = entity_load_single('taxonomy_term', $tid);
  $term_wrapper = entity_metadata_wrapper('taxonomy_term', $term);
  $term_url = $term_wrapper->get('url')->value();
  $entity_info = $term_wrapper->entityInfo();
  $bundle_label = $entity_info['bundles'][$term_wrapper->getBundle()]['label'];
  //Fix code duplication?
  $errors[$field_name][$language][0][] = array(
    'error' => $field_name . '_non_unique',
    'message' => t(
      'A !term_link with the name %name already exists for the current langauge (@language).',
      array(
        '!term_link' => l(drupal_strtolower($bundle_label), $term_url),
        '%name' => $term_wrapper->label(),
        '@language' => $languages[$language]->name,
      )
    )
  );
}

function ubn_terms_field_attach_validate($entity_type, $entity, &$errors) {
  if($entity_type === 'taxonomy_term') {
    if (
      $entity->vocabulary_machine_name === 'term' ||
      $entity->vocabulary_machine_name === 'term_synonym'
    ) {
      $language = entity_translation_language('taxonomy_term', $entity);
      if($entity->vocabulary_machine_name === 'term' && !empty($entity->field_term_synonyms[$language])) {
        $term_synonyms = $entity->field_term_synonyms[$language];
        $current_entity_synonym_tids = array();
        foreach($term_synonyms as $term_synonym) {
          $current_entity_synonym_tids[$term_synonym['tid']] = $term_synonym['tid'];
        }
        foreach($term_synonyms as $term_synonym) {
          $terms = _ubn_terms_language_terms($term_synonym['name'], $language);
          $terms = array_diff_key($terms, $current_entity_synonym_tids);
          if(!empty($terms)) {
            _ubn_terms_field_attach_validate_unique_set_error(key($terms), 'field_term_synonyms', $language, $errors);
          }
        }
      }
      $items = $entity->name_field[$language];
      if (isset($items[0])) {
        $term_name = $items[0];
        $terms = _ubn_terms_language_terms($term_name, $language);
        if(!empty($terms)) {
          $tid = key($terms);
          if($tid != $entity->tid) {
            _ubn_terms_field_attach_validate_unique_set_error($tid, 'name_field', $language, $errors);
          }
        }
      }
    }
  }
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function ubn_terms_ctools_plugin_directory($owner, $plugin_type) {
  if (in_array($plugin_type, array('content_types'))) {
    return "plugins/$plugin_type";
  }
}

/**
 * Implements hook_query_TAG_alter().
 *
 * Super ugly hack, but what to do?
 *
 * @param QueryAlterableInterface $query
 */
/*
function ubn_terms_query_UBN_TERMS_ENTITY_TRANSLATION_ORDER_BY_FIELD_alter(QueryAlterableInterface $query) {
  global $language_content;
  //Hackelyhack
  list($order_by) = array_keys($query->getOrderby());
  list($alias) = explode('.', $order_by);
  $query->condition("$alias.language", $language_content->language, '=');
}
*/

/**
 * Implements hook_query_TAG_alter().
 *
 * Super ugly hack, but what to do?
 *
 * @param QueryAlterableInterface $query
 */
/*
function ubn_terms_query_UBN_TERMS_ENTIY_TRANSLATION_FIELD_CONDITION_alter(QueryAlterableInterface $query) {
  global $language_content;
  //Hackelyhack
  $fields = array();
  $language = $query->getMetadata('entity_language');
  if(empty($language)) {
    $language = $language_content->language;
  }
  foreach($query->conditions() as $condition) {
    if(isset($condition['field']) && strpos($condition['field'], 'field_') === 0) {
      list($alias) = explode('.', $condition['field']);
      $fields[$alias] = $alias;
    }
  }
  foreach($fields as $alias) {
    $query->condition("$alias.language", $language, '=');
  }
}

function ubn_terms_query_UBN_TERMS_DEBUG_alter(QueryAlterableInterface $query) {
  dsm((string) $query);
}
*/

/**
 * Implements hook_query_TAG_alter().
 *
 * Super ugly hack, but what to do?
 *
 * @param QueryAlterableInterface $query
 */
function ubn_terms_query_UBN_TERMS_LANGUAGE_TERMS_alter(QueryAlterableInterface $query) {
  global $language_content;
  //Hackelyhack
  $language = $query->getMetadata('entity_language');
  if(empty($language)) {
    $language = $language_content->language;
  }

  $name_field_alias = NULL;
  foreach(array_keys($query->getTables()) as $alias) {
    if(strpos($alias, 'field_data_name_field') === 0) {
      $name_field_alias = $alias;
    }
  }

  if($name_field_alias) {
    $term_synonyms_alias = $query->leftJoin(
      'field_data_field_term_synonyms',
      'ts',
      "$name_field_alias.entity_id = ts.field_term_synonyms_tid AND ts.entity_type = 'taxonomy_term' AND ts.bundle = 'term'"
    );

    //Only select terms for current language, or term synonyms referenced
    //by terms with current language
    $or = db_or()
      ->condition(db_and()
      ->condition("$name_field_alias.bundle", 'term', '=')
      ->condition("$name_field_alias.language", $language, '=')
    )
    ->condition("$term_synonyms_alias.language", $language, '=');
    $query->condition($or);
  }
  else {
    throw new Exception("Missing name_field table"); //??
  }
}

function ubn_terms_entity_presave($entity, $type) {
  _ubn_terms_invalidate_cache($entity, $type);
}

function ubn_terms_entity_delete($entity, $type) {
  _ubn_terms_invalidate_cache($entity, $type);
}

function _ubn_terms_has_active_term_link($entity_type, $entity, $language) {
  $term = field_get_items($entity_type, $entity, 'field_referenced_term', $language);
  $no_link = field_get_items($entity_type, $entity, 'field_referenced_term_no_link', $language);
  return !empty($term) && !(isset($no_link[0]['value']) && $no_link[0]['value']);
}

function _ubn_terms_cache_clear_all() {
  cache_clear_all('ubn_terms_search_result_', 'cache', TRUE);
}

function _ubn_terms_invalidate_cache($entity, $type) {
  if ($type === 'taxonomy_term' && in_array($entity->vocabulary_machine_name, array('term', 'term_synonym'))) {
    // Purge cached rendered search result
    _ubn_terms_cache_clear_all();
  }
  else if (
    $type === 'field_collection_item' &&
    $entity->field_name === 'field_content_sections'
  ) {
    $language = entity_translation_language('field_collection_item', $entity);
    if (empty($entity->original)) {
      if (_ubn_terms_has_active_term_link('field_collection_item', $entity, $language)) { // (created)
        //New term reference added
        _ubn_terms_cache_clear_all();
      }
    }
    else {
      // Original has active link
      if (_ubn_terms_has_active_term_link('field_collection_item', $entity->original, $language)) {
        $field_language = field_language('field_collection_item', $entity, 'field_referenced_term', $language);
        if(
          // Removed/hidden or changed in new
          !_ubn_terms_has_active_term_link('field_collection_item', $entity, $language) || // (deleted)
          $entity->field_referenced_term[$field_language] != $entity->original->field_referenced_term[$field_language] // (modified)
        ) {
          _ubn_terms_cache_clear_all();
        }
      }
      // Original has no active link but link active in new (created)
      else if (_ubn_terms_has_active_term_link('field_collection_item', $entity, $language)) {
        _ubn_terms_cache_clear_all();
      }
    }
  }
}

// Helper function to check if field collection is in field collection field
function _ubn_terms_field_collection_exists($field_collection, $host_entity_type, $host_entity, $field_name) {
  global $language_content;
  $field_language = field_language($host_entity_type, $host_entity, $field_name, $language_content->language);
  foreach($host_entity->{$field_name}[$field_language] as $item) {
    if ($field_collection->item_id === $item['value']) {
      return TRUE;
    }
  }
  return FALSE;
}
