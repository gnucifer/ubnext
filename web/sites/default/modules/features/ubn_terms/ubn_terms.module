<?php
/**
 * @file
 * Code for the UBN Terms feature.
 */

include_once 'ubn_terms.features.inc';

function ubn_terms_entity_info_alter(&$entity_info) {
  $entity_info['taxonomy_term']['view modes']['ubn_terms_search_result'] = array(
    'label' => t('UBN Terms search result'),
    'custom settings' => FALSE,
  );
}

function ubn_terms_safe_css_identifier($data) {
  $tmp = unpack('H*', $data);
  return array_shift($tmp);
}

function ubn_terms_form_alter(&$form, &$form_state, $form_id) {
  if($form_id === 'taxonomy_form_term') {
    $form['#validate'][] = 'ubn_terms_taxonomy_form_term_validate';
  }
}

function ubn_terms_taxonomy_form_term_validate($form, &$form_state) {
  //dsm('validate');
  //dsm($form_state);
}

function ubn_terms_field_attach_validate($entity_type, $entity, &$errors) {
  if($entity_type === 'taxonomy_term') {
    //TODO: in_array?
    if(
      $entity->vocabulary_machine_name === 'term' ||
      $entity->vocabulary_machine_name === 'term_synonym'
    ) {
      $language = entity_translation_language('taxonomy_term', $entity);
      foreach($entity->name_field as $langcode => $items) {
        $term_name = $items[0]['value'];
        $query = new EntityFieldQuery();
        $query->addMetaData('entity_language', $language);
        $result = $query
          ->entityCondition('entity_type', 'taxonomy_term')
          ->entityCondition('bundle', array('term', 'term_synonym'), 'IN')
          ->fieldCondition('name_field', 'value', $term_name)
          //->fieldLanguageCondition('name_field', $langcode, '=')
          //->addTag('UBN_TERMS_DEBUG')
          ->addTag('UBN_TERMS_ENTIY_TRANSLATION_FIELD_CONDITION')
          ->execute();
        if(isset($result['taxonomy_term'])) {
          $id = key($result['taxonomy_term']);
          //TODO: not current language, form language!!!!!!
          if($id != $entity->tid) {
            $term = entity_load_single('taxonomy_term', $id);
            $term_wrapper = entity_metadata_wrapper('taxonomy_term', $term);
            $term_url = $term_wrapper->get('url')->value();
            $errors['name_field'][$langcode][0][] = array(
              'error' => 'field_name_non_unique',
              'message' => t('A !term_link with this name already exists for the current langauge.', array('!term_link' => l(t('term'), $term_url)))
            );
          }
        }
      }
    }
  }
}

/**
 * Implements hook_ctools_plugin_directory().
 */
function ubn_terms_ctools_plugin_directory($owner, $plugin_type) {
  if (in_array($plugin_type, array('content_types'))) {
    return "plugins/$plugin_type";
  }
}

/**
 * Implements hook_query_TAG_alter().
 *
 * Super ugly hack, but what to do?
 *
 * @param QueryAlterableInterface $query
 */
//TODO: add entity transation?
function ubn_terms_query_UBN_TERMS_ENTITY_TRANSLATION_ORDER_BY_FIELD_alter(QueryAlterableInterface $query) {
  global $language_content;
  //Hackelyhack
  list($order_by) = array_keys($query->getOrderby());
  list($alias) = explode('.', $order_by);
  $query->condition("$alias.language", $language_content->language, '=');
}

/**
 * Implements hook_query_TAG_alter().
 *
 * Super ugly hack, but what to do?
 *
 * @param QueryAlterableInterface $query
 */
function ubn_terms_query_UBN_TERMS_ENTIY_TRANSLATION_FIELD_CONDITION_alter(QueryAlterableInterface $query) {
  global $language_content;
  //Hackelyhack
  $fields = array();
  $language = $query->getMetadata('entity_language');
  if(empty($language)) {
    $language = $language_content->language;
  }
  foreach($query->conditions() as $condition) {
    if(isset($condition['field']) && strpos($condition['field'], 'field_') === 0) {
      list($alias) = explode('.', $condition['field']);
      $fields[$alias] = $alias;
    }
  }
  foreach($fields as $alias) {
    $query->condition("$alias.language", $language, '=');
  }
}

function ubn_terms_query_UBN_TERMS_DEBUG_alter(QueryAlterableInterface $query) {
  dsm((string) $query);
}
